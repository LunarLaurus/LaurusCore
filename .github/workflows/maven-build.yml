name: Java-Maven-Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Bump Version
        id: bump_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          NEW_VERSION=$(echo $VERSION | awk -F. -v OFS=. '{$NF = $NF + 1 ; print}')
          echo "Bumping version from $VERSION to $NEW_VERSION"
          mvn versions:set -DnewVersion=$NEW_VERSION -DgenerateBackupPoms=false
          echo "java_version=$NEW_VERSION" >> $GITHUB_ENV
          echo "java_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit and Push Version Bump
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add pom.xml
          git commit -m "Bump version to ${{ steps.bump_version.outputs.java_version }}"
          git push origin main

      - name: Build with Maven
        id: build_maven
        run: |
          mvn clean install
          JAR_PATH=$(find target -name "*.jar" | head -n 1)
          echo "jar_path=$JAR_PATH" >> $GITHUB_ENV
          echo "jar_path=$JAR_PATH" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          TAG="v${{ steps.bump_version.outputs.java_version }}"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump_version.outputs.java_version }}
          files: ${{ steps.build_maven.outputs.jar_path }}
          body: |
            ### New Release ${{ steps.bump_version.outputs.java_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        run: |
          mvn deploy -DskipTests -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/LunarLaurus/LaurusCore
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
